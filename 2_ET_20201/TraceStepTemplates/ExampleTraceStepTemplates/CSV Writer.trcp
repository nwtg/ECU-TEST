<?xml version="1.0" encoding="utf-8"?>
<TRACE-STEP-PROTOTYPE format-rev="1" uuid="a922f2a105ba11dfa92e0024e8e6b09f" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="trcpPython">
	<SIGNALS xsi:type="trcpParameterDescriptionList">
		<PARAMETER uuid="abdda5d105ba11dfa8ab0024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_0</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="ac16de4005ba11df91df0024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_1</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="ac3366f005ba11df9b800024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_2</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="ac5016b005ba11dfad130024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_3</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="ac6a2e6105ba11dfb7b40024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_4</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="ac86de2105ba11df92d10024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_5</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="aca11cde05ba11dfb8ac0024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_6</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="acc0168f05ba11df8a9e0024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_7</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="acdc9f4005ba11df97330024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_8</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="acf6de0005ba11dfbc720024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_9</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="ad111cc005ba11dfa9230024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_10</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="ad2b5b8005ba11dfb8730024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_11</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="ad4a553005ba11df9c450024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_12</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="ad6704ee05ba11dfb0dd0024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_13</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="ad8143b005ba11df906a0024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_14</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="ad9dcc6105ba11df86d90024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_15</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="adb80b2105ba11df91d80024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_16</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="add704d105ba11df95c80024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_17</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="adf5fe8005ba11df8b740024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_18</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="ae2f36f005ba11dfb9400024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_19</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
		<PARAMETER uuid="ae6d516105ba11df9b070024e8e6b09f" xsi:type="signalDescription">
			<NAME xsi:type="string">Signal_20</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<OPTIONAL-SIGNAL xsi:type="boolean">True</OPTIONAL-SIGNAL>
		</PARAMETER>
	</SIGNALS>
	<PARAMETERS xsi:type="trcpParameterDescriptionList">
		<PARAMETER uuid="af37f46105ba11dfb18f0024e8e6b09f" xsi:type="parameterDescription">
			<NAME xsi:type="string">fileName</NAME>
			<PARAMETER-TYPE xsi:type="string">STRING</PARAMETER-TYPE>
		</PARAMETER>
	</PARAMETERS>
	<INIT-FUNCTION xsi:type="pyFunction">
		<NAME xsi:type="string">Init</NAME>
		<PARAMETER-NAMES>
			<ELEMENT xsi:type="string">fileName</ELEMENT>
		</PARAMETER-NAMES>
		<CODE xsi:type="pyCode">
			<SOURCE xsi:type="string">#Funktionkopf generiert, nicht editieren!
def Init(dataContainer, fileName):
    dataContainer.timeStamp = None
    dataContainer.signalValues = {}
    dataContainer.signalNames = []
    dataContainer.csvFile = open(fileName,&quot;w&quot;)
    nameList = [&quot;timeStamp&quot;]
    for name in dataContainer.GetMappingNames():
        try:
            print((&quot;Name:&quot;, name, &quot; -&gt; &quot;, dataContainer.GetSignalName(name)))
            nameList.append(dataContainer.GetSignalName(name))
            dataContainer.signalNames.append(name)
        except:
            pass # Signal nicht belegt
    dataContainer.csvFile.write('; '.join(nameList))
    dataContainer.csvFile.write('\n')

</SOURCE>
		</CODE>
	</INIT-FUNCTION>
	<FINALIZE-FUNCTION xsi:type="pyFunction">
		<NAME xsi:type="string">Finalize</NAME>
		<PARAMETER-NAMES/>
		<CODE xsi:type="pyCode">
			<SOURCE xsi:type="string">#Funktionskopf generiert, nicht editieren!
def Finalize(dataContainer):
    values = [str(dataContainer.timeStamp)]
    for signalName in dataContainer.signalNames:
        try:
            values.append(dataContainer.signalValues.get(signalName,&quot; &quot;))
        except:
            continue
        
    dataContainer.csvFile.write('; '.join(map(str,values)))
    dataContainer.signalValues={}
        
    dataContainer.csvFile.close()
</SOURCE>
		</CODE>
	</FINALIZE-FUNCTION>
	<FUNCTIONS>
		<ELEMENT xsi:type="pyEventFunction">
			<NAME xsi:type="string">NewValue</NAME>
			<PARAMETER-NAMES/>
			<CODE xsi:type="pyCode">
				<SOURCE xsi:type="string">#Funktionkopf generiert, nicht editieren!
def NewValue(dataContainer, signal):
    time = signal.GetTime()
    if dataContainer.timeStamp is None:
        dataContainer.timeStamp = time
    elif time != dataContainer.timeStamp:
        values = [str(dataContainer.timeStamp)]
        for signalName in dataContainer.signalNames:
            try:
                values.append(dataContainer.signalValues.get(signalName,&quot; &quot;))
            except:
                continue
        
        dataContainer.csvFile.write('; '.join(map(str,values)))
        dataContainer.csvFile.write('\n')
        dataContainer.signalValues={}
        
        
    dataContainer.timeStamp = signal.GetTime()
    dataContainer.signalValues[signal.GetName()] = signal.GetValue()
</SOURCE>
			</CODE>
			<SIGNAL-NAMES>
				<ELEMENT xsi:type="string">Signal_0</ELEMENT>
				<ELEMENT xsi:type="string">Signal_1</ELEMENT>
				<ELEMENT xsi:type="string">Signal_2</ELEMENT>
				<ELEMENT xsi:type="string">Signal_3</ELEMENT>
				<ELEMENT xsi:type="string">Signal_4</ELEMENT>
				<ELEMENT xsi:type="string">Signal_5</ELEMENT>
				<ELEMENT xsi:type="string">Signal_6</ELEMENT>
				<ELEMENT xsi:type="string">Signal_7</ELEMENT>
				<ELEMENT xsi:type="string">Signal_8</ELEMENT>
				<ELEMENT xsi:type="string">Signal_9</ELEMENT>
				<ELEMENT xsi:type="string">Signal_10</ELEMENT>
				<ELEMENT xsi:type="string">Signal_11</ELEMENT>
				<ELEMENT xsi:type="string">Signal_12</ELEMENT>
				<ELEMENT xsi:type="string">Signal_13</ELEMENT>
				<ELEMENT xsi:type="string">Signal_14</ELEMENT>
				<ELEMENT xsi:type="string">Signal_15</ELEMENT>
				<ELEMENT xsi:type="string">Signal_16</ELEMENT>
				<ELEMENT xsi:type="string">Signal_17</ELEMENT>
				<ELEMENT xsi:type="string">Signal_18</ELEMENT>
				<ELEMENT xsi:type="string">Signal_19</ELEMENT>
				<ELEMENT xsi:type="string">Signal_20</ELEMENT>
			</SIGNAL-NAMES>
		</ELEMENT>
	</FUNCTIONS>
</TRACE-STEP-PROTOTYPE>
