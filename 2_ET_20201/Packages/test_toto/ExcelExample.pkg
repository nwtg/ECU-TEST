<?xml version="1.0" encoding="utf-8"?>
<PACKAGE format-rev="7" prog-version="8.1.0.92109" xmlns="http://www.tracetronic.de/xml/ecu-test" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.tracetronic.de/xml/ecu-test package.xsd">
	<INFORMATION format-rev="2" xsi:type="packageInfo">
		<ATTRIBUTES>
			<ATTRIBUTE xsi:type="attributeInst">
				<NAME xsi:type="string">Type</NAME>
				<VALUE xsi:type="string">MANUAL</VALUE>
			</ATTRIBUTE>
		</ATTRIBUTES>
		<DESCRIPTION xsi:type="string"/>
		<VERSION xsi:type="string"/>
		<ALTERNATE-CALL-REPRESENTATION-ACTION-FIELD-TEMPLATE xsi:type="string"/>
		<ALTERNATE-CALL-REPRESENTATION-EXPECTATION-FIELD-TEMPLATE xsi:type="string"/>
	</INFORMATION>
	<VARIABLES xsi:type="variableContainer">
		<VARIABLE format-rev="1" xsi:type="variable">
			<NAME xsi:type="string">ExcelFileName</NAME>
			<DESCRIPTION xsi:type="string">Absolute path to an existing EXCEL file</DESCRIPTION>
			<DEFAULT-VALUE format-rev="1" xsi:type="value">
				<COMPLEX-DATA xsi:type="I18NItem">
					<MULTILANGDATA>
						<ELEMENT dkey="de_DE">
							<DVALUE xsi:type="string">c:\Temp\MatrixValues.xlsx</DVALUE>
						</ELEMENT>
						<ELEMENT dkey="en_US">
							<DVALUE xsi:type="string">MatrixValues.xlsx</DVALUE>
						</ELEMENT>
					</MULTILANGDATA>
					<INITIAL-LANGUAGE xsi:type="string">de_DE</INITIAL-LANGUAGE>
				</COMPLEX-DATA>
			</DEFAULT-VALUE>
		</VARIABLE>
		<VARIABLE format-rev="1" xsi:type="variable">
			<NAME xsi:type="string">ExcelWorkSheetName</NAME>
			<DESCRIPTION xsi:type="string">Worksheet name</DESCRIPTION>
			<DEFAULT-VALUE format-rev="1" xsi:type="value">
				<COMPLEX-DATA xsi:type="I18NItem">
					<MULTILANGDATA>
						<ELEMENT dkey="de_DE">
							<DVALUE xsi:type="string">Sheet1</DVALUE>
						</ELEMENT>
					</MULTILANGDATA>
					<INITIAL-LANGUAGE xsi:type="string">de_DE</INITIAL-LANGUAGE>
				</COMPLEX-DATA>
			</DEFAULT-VALUE>
		</VARIABLE>
		<VARIABLE format-rev="1" xsi:type="variable">
			<NAME xsi:type="string">readMatrixFromExcel</NAME>
			<DESCRIPTION xsi:type="string">Reads matrix values from EXCEL worksheet</DESCRIPTION>
			<DEFAULT-VALUE xsi:type="function">
				<CODE xsi:type="string">import os
from openpyxl import load_workbook
from tts.core.package.dataStructures.Matrix import SparseMatrix

# function must be named 'func'
def func(fileName, workSheetName):
    filePath = os.path.join(api.GetSetting('parameterPath'), fileName)
    wb = load_workbook(filePath)
    sheet = wb[workSheetName]
    matrix = SparseMatrix(sheet.max_column,sheet.max_row)
    for column in range(matrix.GetXDimension()):
        for row in range(matrix.GetYDimension()):
            value = sheet.cell(column=column+1, row=row+1).value
            matrix.SetValue(column, row, value if value else 0)

    return matrix
</CODE>
			</DEFAULT-VALUE>
		</VARIABLE>
		<VARIABLE format-rev="1" xsi:type="variable">
			<NAME xsi:type="string">actual</NAME>
			<DESCRIPTION xsi:type="string">Matrix read from Excel file</DESCRIPTION>
			<DEFAULT-VALUE format-rev="1" xsi:type="sparseMatrix">
				<X-DIMENSION xsi:type="integer">1</X-DIMENSION>
				<Y-DIMENSION xsi:type="integer">1</Y-DIMENSION>
				<VALUES/>
			</DEFAULT-VALUE>
		</VARIABLE>
		<VARIABLE format-rev="1" xsi:type="variable">
			<NAME xsi:type="string">printMatrix</NAME>
			<DESCRIPTION xsi:type="string"/>
			<DEFAULT-VALUE xsi:type="function">
				<CODE xsi:type="string">
#function must be named 'func'

def func(matrix):
    rows = []
    for r in range(matrix.GetYDimension()):
        row = []
        for c in range(matrix.GetXDimension()):
            row.append(str(matrix.GetValue(c, r)))
        rows.append('; '.join(row))
    return '\n'.join(rows)

</CODE>
			</DEFAULT-VALUE>
		</VARIABLE>
	</VARIABLES>
	<MAPPING format-rev="1" xsi:type="localMappingSpace"/>
	<TESTSTEPS xsi:type="testCase">
		<TESTSTEP format-rev="3" id="180" name="TsCalculation" xsi:type="utility-4115fa00-5f3c-11df-8a53-001c233b3528">
			<VARIABLE-REFS>
				<VARIABLE-NAME dkey="default">
					<DVALUE xsi:type="string">actual</DVALUE>
				</VARIABLE-NAME>
			</VARIABLE-REFS>
			<FORMULA xsi:type="functionBaseExpression">
				<COMPONENT xsi:type="varBaseExpression">
					<NAME xsi:type="string">readMatrixFromExcel</NAME>
				</COMPONENT>
				<ARGUMENTS>
					<ARGUMENT xsi:type="varBaseExpression">
						<NAME xsi:type="string">ExcelFileName</NAME>
					</ARGUMENT>
					<ARGUMENT xsi:type="varBaseExpression">
						<NAME xsi:type="string">ExcelWorkSheetName</NAME>
					</ARGUMENT>
				</ARGUMENTS>
			</FORMULA>
		</TESTSTEP>
		<TESTSTEP format-rev="3" id="219" name="TsCalculation" xsi:type="utility-4115fa00-5f3c-11df-8a53-001c233b3528">
			<FORMULA xsi:type="functionBaseExpression">
				<COMPONENT xsi:type="varBaseExpression">
					<NAME xsi:type="string">printMatrix</NAME>
				</COMPONENT>
				<ARGUMENTS>
					<ARGUMENT xsi:type="varBaseExpression">
						<NAME xsi:type="string">actual</NAME>
					</ARGUMENT>
				</ARGUMENTS>
			</FORMULA>
		</TESTSTEP>
		<TESTSTEP format-rev="3" id="234" name="TsCalculation" xsi:type="utility-4115fa00-5f3c-11df-8a53-001c233b3528">
			<FORMULA xsi:type="functionBaseExpression">
				<COMPONENT xsi:type="attributeBaseExpression">
					<COMPONENT xsi:type="varBaseExpression">
						<NAME xsi:type="string">actual</NAME>
					</COMPONENT>
					<ATTR-NAME xsi:type="string">GetValue</ATTR-NAME>
				</COMPONENT>
				<ARGUMENTS>
					<ARGUMENT format-rev="1" xsi:type="valueBaseExpression">
						<VALUE xsi:type="integer">1</VALUE>
					</ARGUMENT>
					<ARGUMENT format-rev="1" xsi:type="valueBaseExpression">
						<VALUE xsi:type="integer">1</VALUE>
					</ARGUMENT>
				</ARGUMENTS>
			</FORMULA>
		</TESTSTEP>
	</TESTSTEPS>
</PACKAGE>
